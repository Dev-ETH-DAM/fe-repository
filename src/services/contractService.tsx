
import { config } from "@/wagmi";
import { getWalletClient, getPublicClient } from "wagmi/actions";
import { Abi } from "abitype";
import { sapphireTestnet } from "viem/chains";
import { environment } from "@/enviroment/environment";
import { Crumb } from "@/interfaces/interfaces";
const StorageBytecode =
	"0x608060405234801561001057600080fd5b50610a6a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063467fba0f1461003b578063df9084eb14610057575b600080fd5b61005560048036038101906100509190610435565b610087565b005b610071600480360381019061006c91906104ad565b61016c565b60405161007e91906106e1565b60405180910390f35b600082604051610097919061073f565b908152602001604051809103902060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816101659190610962565b5050505050565b606060008260405161017e919061073f565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156102d057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461023f90610785565b80601f016020809104026020016040519081016040528092919081815260200182805461026b90610785565b80156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b505050505081525050815260200190600101906101ac565b505050509050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610342826102f9565b810181811067ffffffffffffffff821117156103615761036061030a565b5b80604052505050565b60006103746102db565b90506103808282610339565b919050565b600067ffffffffffffffff8211156103a05761039f61030a565b5b6103a9826102f9565b9050602081019050919050565b82818337600083830152505050565b60006103d86103d384610385565b61036a565b9050828152602081018484840111156103f4576103f36102f4565b5b6103ff8482856103b6565b509392505050565b600082601f83011261041c5761041b6102ef565b5b813561042c8482602086016103c5565b91505092915050565b6000806040838503121561044c5761044b6102e5565b5b600083013567ffffffffffffffff81111561046a576104696102ea565b5b61047685828601610407565b925050602083013567ffffffffffffffff811115610497576104966102ea565b5b6104a385828601610407565b9150509250929050565b6000602082840312156104c3576104c26102e5565b5b600082013567ffffffffffffffff8111156104e1576104e06102ea565b5b6104ed84828501610407565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054d82610522565b9050919050565b61055d81610542565b82525050565b6000819050919050565b61057681610563565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b657808201518184015260208101905061059b565b60008484015250505050565b60006105cd8261057c565b6105d78185610587565b93506105e7818560208601610598565b6105f0816102f9565b840191505092915050565b60006060830160008301516106136000860182610554565b506020830151610626602086018261056d565b506040830151848203604086015261063e82826105c2565b9150508091505092915050565b600061065783836105fb565b905092915050565b6000602082019050919050565b6000610677826104f6565b6106818185610501565b93508360208202850161069385610512565b8060005b858110156106cf57848403895281516106b0858261064b565b94506106bb8361065f565b925060208a01995050600181019050610697565b50829750879550505050505092915050565b600060208201905081810360008301526106fb818461066c565b905092915050565b600081905092915050565b60006107198261057c565b6107238185610703565b9350610733818560208601610598565b80840191505092915050565b600061074b828461070e565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061079d57607f821691505b6020821081036107b0576107af610756565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107db565b61082286836107db565b95508019841693508086168417925050509392505050565b6000819050919050565b600061085f61085a61085584610563565b61083a565b610563565b9050919050565b6000819050919050565b61087983610844565b61088d61088582610866565b8484546107e8565b825550505050565b600090565b6108a2610895565b6108ad818484610870565b505050565b5b818110156108d1576108c660008261089a565b6001810190506108b3565b5050565b601f821115610916576108e7816107b6565b6108f0846107cb565b810160208510156108ff578190505b61091361090b856107cb565b8301826108b2565b50505b505050565b600082821c905092915050565b60006109396000198460080261091b565b1980831691505092915050565b60006109528383610928565b9150826002028217905092915050565b61096b8261057c565b67ffffffffffffffff8111156109845761098361030a565b5b61098e8254610785565b6109998282856108d5565b600060209050601f8311600181146109cc57600084156109ba578287015190505b6109c48582610946565b865550610a2c565b601f1984166109da866107b6565b60005b82811015610a02578489015182556001820191506020850194506020810190506109dd565b86831015610a1f5784890151610a1b601f891682610928565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209cce1956b32aca58298bcfa382951a501678a532bac82136f68ca88d7cffddcf64736f6c63430008130033";

const StorageABI = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "topic",
				"type": "string"
			}
		],
		"name": "getMessages",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					}
				],
				"internalType": "struct ConfidentialChat.Message[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "topic",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "content",
				"type": "string"
			}
		],
		"name": "sendMessage",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
] as const satisfies Abi;

const SubcontractBytecode =
	"0x608060405234801561001057600080fd5b50610a6a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063467fba0f1461003b578063df9084eb14610057575b600080fd5b61005560048036038101906100509190610435565b610087565b005b610071600480360381019061006c91906104ad565b61016c565b60405161007e91906106e1565b60405180910390f35b600082604051610097919061073f565b908152602001604051809103902060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816101659190610962565b5050505050565b606060008260405161017e919061073f565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156102d057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461023f90610785565b80601f016020809104026020016040519081016040528092919081815260200182805461026b90610785565b80156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b505050505081525050815260200190600101906101ac565b505050509050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610342826102f9565b810181811067ffffffffffffffff821117156103615761036061030a565b5b80604052505050565b60006103746102db565b90506103808282610339565b919050565b600067ffffffffffffffff8211156103a05761039f61030a565b5b6103a9826102f9565b9050602081019050919050565b82818337600083830152505050565b60006103d86103d384610385565b61036a565b9050828152602081018484840111156103f4576103f36102f4565b5b6103ff8482856103b6565b509392505050565b600082601f83011261041c5761041b6102ef565b5b813561042c8482602086016103c5565b91505092915050565b6000806040838503121561044c5761044b6102e5565b5b600083013567ffffffffffffffff81111561046a576104696102ea565b5b61047685828601610407565b925050602083013567ffffffffffffffff811115610497576104966102ea565b5b6104a385828601610407565b9150509250929050565b6000602082840312156104c3576104c26102e5565b5b600082013567ffffffffffffffff8111156104e1576104e06102ea565b5b6104ed84828501610407565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054d82610522565b9050919050565b61055d81610542565b82525050565b6000819050919050565b61057681610563565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105b657808201518184015260208101905061059b565b60008484015250505050565b60006105cd8261057c565b6105d78185610587565b93506105e7818560208601610598565b6105f0816102f9565b840191505092915050565b60006060830160008301516106136000860182610554565b506020830151610626602086018261056d565b506040830151848203604086015261063e82826105c2565b9150508091505092915050565b600061065783836105fb565b905092915050565b6000602082019050919050565b6000610677826104f6565b6106818185610501565b93508360208202850161069385610512565b8060005b858110156106cf57848403895281516106b0858261064b565b94506106bb8361065f565b925060208a01995050600181019050610697565b50829750879550505050505092915050565b600060208201905081810360008301526106fb818461066c565b905092915050565b600081905092915050565b60006107198261057c565b6107238185610703565b9350610733818560208601610598565b80840191505092915050565b600061074b828461070e565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061079d57607f821691505b6020821081036107b0576107af610756565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107db565b61082286836107db565b95508019841693508086168417925050509392505050565b6000819050919050565b600061085f61085a61085584610563565b61083a565b610563565b9050919050565b6000819050919050565b61087983610844565b61088d61088582610866565b8484546107e8565b825550505050565b600090565b6108a2610895565b6108ad818484610870565b505050565b5b818110156108d1576108c660008261089a565b6001810190506108b3565b5050565b601f821115610916576108e7816107b6565b6108f0846107cb565b810160208510156108ff578190505b61091361090b856107cb565b8301826108b2565b50505b505050565b600082821c905092915050565b60006109396000198460080261091b565b1980831691505092915050565b60006109528383610928565b9150826002028217905092915050565b61096b8261057c565b67ffffffffffffffff8111156109845761098361030a565b5b61098e8254610785565b6109998282856108d5565b600060209050601f8311600181146109cc57600084156109ba578287015190505b6109c48582610946565b865550610a2c565b601f1984166109da866107b6565b60005b82811015610a02578489015182556001820191506020850194506020810190506109dd565b86831015610a1f5784890151610a1b601f891682610928565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209cce1956b32aca58298bcfa382951a501678a532bac82136f68ca88d7cffddcf64736f6c63430008130033";

const SubcontractABI = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_requestName",
				"type": "string"
			},
			{
				"internalType": "address",
				"name": "_requester",
				"type": "address"
			},
			{
				"internalType": "bytes21",
				"name": "_roflAppID",
				"type": "bytes21"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes16",
				"name": "id",
				"type": "bytes16"
			},
			{
				"indexed": false,
				"internalType": "string",
				"name": "aliasName",
				"type": "string"
			}
		],
		"name": "CrumbAdded",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes16",
				"name": "id",
				"type": "bytes16"
			},
			{
				"indexed": false,
				"internalType": "enum SubContract.CrumbStatus",
				"name": "status",
				"type": "uint8"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "assignee",
				"type": "address"
			}
		],
		"name": "CrumbUpdated",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "bytes16",
				"name": "_id",
				"type": "bytes16"
			},
			{
				"internalType": "string",
				"name": "_aliasName",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_price",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "_setupTask",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_setupValidation",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_maxRun",
				"type": "uint256"
			}
		],
		"name": "addCrumb",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "crumbs",
		"outputs": [
			{
				"internalType": "bytes16",
				"name": "id",
				"type": "bytes16"
			},
			{
				"internalType": "string",
				"name": "aliasName",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "price",
				"type": "uint256"
			},
			{
				"internalType": "enum SubContract.CrumbStatus",
				"name": "status",
				"type": "uint8"
			},
			{
				"internalType": "string",
				"name": "setupTask",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "setupValidation",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "result",
				"type": "string"
			},
			{
				"internalType": "address",
				"name": "assignee",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "lastUpdated",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "maxRun",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getAllCrumbs",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes16",
						"name": "id",
						"type": "bytes16"
					},
					{
						"internalType": "string",
						"name": "aliasName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "enum SubContract.CrumbStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "setupTask",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "setupValidation",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "result",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "assignee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxRun",
						"type": "uint256"
					}
				],
				"internalType": "struct SubContract.Crumb[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes16",
				"name": "_id",
				"type": "bytes16"
			}
		],
		"name": "getCrumb",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes16",
						"name": "id",
						"type": "bytes16"
					},
					{
						"internalType": "string",
						"name": "aliasName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "enum SubContract.CrumbStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "setupTask",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "setupValidation",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "result",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "assignee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxRun",
						"type": "uint256"
					}
				],
				"internalType": "struct SubContract.Crumb",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getCrumbCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "enum SubContract.CrumbStatus",
				"name": "_status",
				"type": "uint8"
			}
		],
		"name": "getCrumbCountByStatus",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getCrumbsByRequester",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes16",
						"name": "id",
						"type": "bytes16"
					},
					{
						"internalType": "string",
						"name": "aliasName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "enum SubContract.CrumbStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "setupTask",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "setupValidation",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "result",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "assignee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxRun",
						"type": "uint256"
					}
				],
				"internalType": "struct SubContract.Crumb[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "enum SubContract.CrumbStatus",
				"name": "_status",
				"type": "uint8"
			}
		],
		"name": "getCrumbsByStatus",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes16",
						"name": "id",
						"type": "bytes16"
					},
					{
						"internalType": "string",
						"name": "aliasName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "enum SubContract.CrumbStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "setupTask",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "setupValidation",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "result",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "assignee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxRun",
						"type": "uint256"
					}
				],
				"internalType": "struct SubContract.Crumb[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "requestName",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "requester",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "results",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "roflAppID",
		"outputs": [
			{
				"internalType": "bytes21",
				"name": "",
				"type": "bytes21"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes16",
				"name": "_id",
				"type": "bytes16"
			},
			{
				"internalType": "string",
				"name": "_result",
				"type": "string"
			}
		],
		"name": "updateCrumbToClosed",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes16",
				"name": "_id",
				"type": "bytes16"
			}
		],
		"name": "updateCrumbToClosedValidated",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes16",
				"name": "_id",
				"type": "bytes16"
			}
		],
		"name": "updateCrumbToQueued",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_results",
				"type": "string"
			}
		],
		"name": "updateResults",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
] as const satisfies Abi;
const MainBytecode =
	"0x608060405234801561001057600080fd5b5061206d806100206000396000f3fe6080604052600436106100865760003560e01c8063b4754a8311610059578063b4754a8314610165578063c2ab6c2a146101a7578063c3a6e079146101d0578063d0d83789146101f9578063d6cee2281461022457610086565b80630918ea141461008b5780639964382c146100cd5780639f0a5c15146100f8578063a07f4fbf14610123575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906118fc565b610240565b6040516100c496959493929190611c6d565b60405180910390f35b3480156100d957600080fd5b506100e2610354565b6040516100ef9190611cd5565b60405180910390f35b34801561010457600080fd5b5061010d61050f565b60405161011a9190611cd5565b60405180910390f35b34801561012f57600080fd5b5061014a600480360381019061014591906118fc565b6106ca565b60405161015c96959493929190611c6d565b60405180910390f35b34801561017157600080fd5b5061018c600480360381019061018791906118fc565b6107de565b60405161019e96959493929190611c6d565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190611925565b6108f2565b005b3480156101dc57600080fd5b506101f760048036038101906101f291906118fc565b610e30565b005b34801561020557600080fd5b5061020e6112e1565b60405161021b9190611cd5565b60405180910390f35b61023e60048036038101906102399190611895565b61149c565b005b6002818154811061025057600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461029f90611ef0565b80601f01602080910402602001604051908101604052809291908181526020018280546102cb90611ef0565b80156103185780601f106102ed57610100808354040283529160200191610318565b820191906000526020600020905b8154815290600101906020018083116102fb57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561050657838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461040b90611ef0565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611ef0565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610378565b50505050905090565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156106c157838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546105c690611ef0565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290611ef0565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610533565b50505050905090565b600181815481106106da57600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461072990611ef0565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611ef0565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600081815481106107ee57600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461083d90611ef0565b80601f016020809104026020016040519081016040528092919081815260200182805461086990611ef0565b80156108b65780601f1061088b576101008083540402835291602001916108b6565b820191906000526020600020905b81548152906001019060200180831161089957829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60005b600080549050811015610df057826000828154811061093d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060060201600401541415610ddd578160008281548110610990577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008281548110610a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820181600201908054610ad790611ef0565b610ae2929190611693565b5060038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060006001600080549050610b749190611e3e565b81548110610bab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020160008281548110610bf3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820181600201908054610c8690611ef0565b610c91929190611693565b5060038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000805480610d48577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000209060060201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000610d9c9190611720565b600382016000905560048201600090556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050905550610e2c565b8080610de890611f22565b9150506108f5565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2390611d37565b60405180910390fd5b5050565b60005b6001805490508110156112a2578160018281548110610e7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020160040154141561128f57600260018281548110610ecf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820181600201908054610f8b90611ef0565b610f96929190611693565b5060038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060018080805490506110269190611e3e565b8154811061105d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060060201600182815481106110a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282018160020190805461113890611ef0565b611143929190611693565b5060038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018054806111fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000209060060201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600061124e9190611720565b600382016000905560048201600090556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550509055506112de565b808061129a90611f22565b915050610e33565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590611d57565b60405180910390fd5b50565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561149357838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461139890611ef0565b80601f01602080910402602001604051908101604052809291908181526020018280546113c490611ef0565b80156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611305565b50505050905090565b8134146114de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d590611cf7565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff16311015611538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152f90611d17565b60405180910390fd5b60006040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff168152509050600081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061162f929190611760565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b82805461169f90611ef0565b90600052602060002090601f0160209004810192826116c1576000855561170f565b82601f106116d2578054855561170f565b8280016001018555821561170f57600052602060002091601f016020900482015b8281111561170e5782548255916001019190600101906116f3565b5b50905061171c91906117e6565b5090565b50805461172c90611ef0565b6000825580601f1061173e575061175d565b601f01602090049060005260206000209081019061175c91906117e6565b5b50565b82805461176c90611ef0565b90600052602060002090601f01602090048101928261178e57600085556117d5565b82601f106117a757805160ff19168380011785556117d5565b828001600101855582156117d5579182015b828111156117d45782518255916020019190600101906117b9565b5b5090506117e291906117e6565b5090565b5b808211156117ff5760008160009055506001016117e7565b5090565b600061181661181184611da8565b611d77565b90508281526020810184848401111561182e57600080fd5b611839848285611eae565b509392505050565b60008135905061185081612009565b92915050565b600082601f83011261186757600080fd5b8135611877848260208601611803565b91505092915050565b60008135905061188f81612020565b92915050565b6000806000606084860312156118aa57600080fd5b600084013567ffffffffffffffff8111156118c457600080fd5b6118d086828701611856565b93505060206118e186828701611880565b92505060406118f286828701611880565b9150509250925092565b60006020828403121561190e57600080fd5b600061191c84828501611880565b91505092915050565b6000806040838503121561193857600080fd5b600061194685828601611880565b925050602061195785828601611841565b9150509250929050565b600061196d8383611bc6565b905092915050565b61197e81611e72565b82525050565b61198d81611e72565b82525050565b600061199e82611de8565b6119a88185611e0b565b9350836020820285016119ba85611dd8565b8060005b858110156119f657848403895281516119d78582611961565b94506119e283611dfe565b925060208a019950506001810190506119be565b50829750879550505050505092915050565b6000611a1382611df3565b611a1d8185611e1c565b9350611a2d818560208601611ebd565b611a3681611ff8565b840191505092915050565b6000611a4c82611df3565b611a568185611e2d565b9350611a66818560208601611ebd565b611a6f81611ff8565b840191505092915050565b6000611a87601b83611e2d565b91507f496e636f727265637420746f6b656e20616d6f756e742073656e7400000000006000830152602082019050919050565b6000611ac7602083611e2d565b91507f496e73756666696369656e742062616c616e636520746f20616464207461736b6000830152602082019050919050565b6000611b07603083611e2d565b91507f5461736b20776974682074686520676976656e204944206e6f7420666f756e6460008301527f20696e20526571756573745175657565000000000000000000000000000000006020830152604082019050919050565b6000611b6d603383611e2d565b91507f5461736b20776974682074686520676976656e204944206e6f7420666f756e6460008301527f20696e20496e50726f67726573735175657565000000000000000000000000006020830152604082019050919050565b600060c083016000830151611bde6000860182611975565b506020830151611bf16020860182611c4f565b5060408301518482036040860152611c098282611a08565b9150506060830151611c1e6060860182611c4f565b506080830151611c316080860182611c4f565b5060a0830151611c4460a0860182611975565b508091505092915050565b611c5881611ea4565b82525050565b611c6781611ea4565b82525050565b600060c082019050611c826000830189611984565b611c8f6020830188611c5e565b8181036040830152611ca18187611a41565b9050611cb06060830186611c5e565b611cbd6080830185611c5e565b611cca60a0830184611984565b979650505050505050565b60006020820190508181036000830152611cef8184611993565b905092915050565b60006020820190508181036000830152611d1081611a7a565b9050919050565b60006020820190508181036000830152611d3081611aba565b9050919050565b60006020820190508181036000830152611d5081611afa565b9050919050565b60006020820190508181036000830152611d7081611b60565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715611d9e57611d9d611fc9565b5b8060405250919050565b600067ffffffffffffffff821115611dc357611dc2611fc9565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611e4982611ea4565b9150611e5483611ea4565b925082821015611e6757611e66611f6b565b5b828203905092915050565b6000611e7d82611e84565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611edb578082015181840152602081019050611ec0565b83811115611eea576000848401525b50505050565b60006002820490506001821680611f0857607f821691505b60208210811415611f1c57611f1b611f9a565b5b50919050565b6000611f2d82611ea4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f6057611f5f611f6b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61201281611e72565b811461201d57600080fd5b50565b61202981611ea4565b811461203457600080fd5b5056fea26469706673582212203d79410fa81ef58ce8093abc923ac18371a3cae8f73a368def4c649142de13b664736f6c63430008000033";

const MainABI = [
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "CompletedQueue",
		"outputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "content",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "sum",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "subContractAddress",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "InProgressQueue",
		"outputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "content",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "sum",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "subContractAddress",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "RequestQueue",
		"outputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "content",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "sum",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "subContractAddress",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_content",
				"type": "string"
			},
			{
				"internalType": "uint256",
				"name": "_sum",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_id",
				"type": "uint256"
			}
		],
		"name": "addToRequestQueue",
		"outputs": [

		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getCompletedQueue",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "sum",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "subContractAddress",
						"type": "address"
					}
				],
				"internalType": "struct MainContract.ComputeTask[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getInProgressQueue",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "sum",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "subContractAddress",
						"type": "address"
					}
				],
				"internalType": "struct MainContract.ComputeTask[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [

		],
		"name": "getRequestQueue",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "sum",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "subContractAddress",
						"type": "address"
					}
				],
				"internalType": "struct MainContract.ComputeTask[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_id",
				"type": "uint256"
			}
		],
		"name": "moveToCompletedQueue",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_id",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "_subContractAddress",
				"type": "address"
			}
		],
		"name": "moveToInProgressQueue",
		"outputs": [

		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
] as const satisfies Abi;

const publicClient = getPublicClient(config, { chainId: sapphireTestnet.id });

export async function deployStorageContract() {
	const walletClient = await getWalletClient(config);
	if (!walletClient) throw new Error("Wallet client not found");

	return walletClient.deployContract({
		abi: StorageABI,
		bytecode: StorageBytecode,
		args: [],
	});
}

export async function sendMessage(
	account: `0x${string}`,
	contractAddress: `0x${string}`,
	topic: string,
	content: string
) {
	const walletClient = await getWalletClient(config);
	if (!walletClient || !publicClient) throw new Error("Missing client(s)");

	const callArgs = {
		account,
		abi: StorageABI,
		address: contractAddress,
		functionName: "sendMessage",
		args: [topic, content],
	} as const;

	const gas = await publicClient.estimateContractGas(callArgs);
	return walletClient.writeContract({ ...callArgs, gas });
}

export async function getMessages(
	contractAddress: `0x${string}`,
	topic: string
) {
	if (!publicClient) throw new Error("No public client");

	return publicClient.readContract({
		abi: StorageABI,
		address: contractAddress,
		functionName: "getMessages",
		args: [topic],
	});
}

export async function addToRequestQueue(
	account: `0x${string}`,
	content: string,
	sumInEth: string, // e.g. "0.05"
) {
	const walletClient = await getWalletClient(config);
	if (!walletClient || !publicClient) throw new Error('Missing wallet or public client');

	const sumInWei = BigInt(parseFloat(sumInEth) * 1e18); // convert ETH → wei
	console.log(content )

	const callArgs = {
		account,
		abi: MainABI,
		address: environment.mainContractName,
		functionName: 'addToRequestQueue',
		args: [content, sumInWei, BigInt(Math.floor(Math.random() * 1_000_000_000) + 1)],
		value: sumInWei,
	} as const;

	const gas = await publicClient.estimateContractGas(callArgs);

	return walletClient.writeContract({
		...callArgs,
		gas,
	});
}

export async function getInProgressQueue(
) {
	if (!publicClient) throw new Error('Public client not found');

	return publicClient.readContract({
		abi: MainABI,
		address: environment.mainContractName,
		functionName: 'getInProgressQueue',
		args: [],
	});
}
export async function getCompletedQueue(
) {
	if (!publicClient) throw new Error('Public client not found');

	return publicClient.readContract({
		abi: MainABI,
		address: environment.mainContractName,
		functionName: 'getCompletedQueue',
		args: [],
	});
}
export async function getRequestQueue(
) {
	if (!publicClient) throw new Error('Public client not found');

	return publicClient.readContract({
		abi: MainABI,
		address: environment.mainContractName,
		functionName: 'getRequestQueue',
		args: [],
	});
}

export async function getCrumbsByStatus(
	subContractAddress: `0x${string}`,
	status: number
): Promise<any[]> {
	if (!publicClient) throw new Error('Public client not found');

	const result = await publicClient.readContract({
		abi: SubcontractABI,
		address: subContractAddress,
		functionName: 'getCrumbsByStatus',
		args: [status],
	});

	return result as any[];
}

export async function updateCrumbToQueued(
	subContractAddress: `0x${string}`,
	crumbId: `0x${string}`
) {
	const walletClient = await getWalletClient(config);
	if (!walletClient || !publicClient) throw new Error('Missing wallet or public client');

	const callArgs = {
		abi: SubcontractABI,
		address: subContractAddress,
		functionName: 'updateCrumbToQueued',
		args: [crumbId],
	} as const;

	const gas = await publicClient.estimateContractGas(callArgs);

	return walletClient.writeContract({
		...callArgs,
		gas,
	});
}

export async function getCrumbsByRequester(
	subContractAddress: `0x${string}`
): Promise<Crumb[]> {
	if (!publicClient) throw new Error('Public client not available');
	const result = await publicClient.readContract({
		abi: SubcontractABI,
		address: subContractAddress,
		functionName: 'getCrumbsByRequester',
		args: [],
	});
	return result as any[];
}